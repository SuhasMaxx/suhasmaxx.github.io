{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pit-block/pit-block.component.ts","webpack:///src/app/pit-block/pit-block.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","player1Home","index","value","player2Home","player1pits","player2pits","title","gameStarted","gameData","currentPlayer","processPitData","pitData","attribs","Object","getOwnPropertyNames","i","length","attrib","push","Number","pit","Array","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","PitBlockComponent","stones","Math","floor","random","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { PitBlockComponent } from './pit-block/pit-block.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  player1Home = {index:0, value:\"0\"};\n  player2Home = {index:0, value:\"0\"};\n  player1pits = [];\n  player2pits = [];\n  title = 'swagger-ui';\n  gameStarted = false;\n  gameData = {\n    id: 0\n  };\n  currentPlayer= \"Player 1\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.processPitData({\n      \"1\": 9,\n      \"2\": 3,\n      \"3\": 2,\n      \"4\": 0,\n      \"5\": 9,\n      \"6\": 9,\n      \"7\": 3,\n      \"8\": 9,\n      \"9\": 0,\n      \"10\": 2,\n      \"11\": 4,\n      \"12\": 10,\n      \"13\": 9,\n      \"14\": 3\n    });\n  }\n\n  processPitData(pitData:Object){\n    var attribs = Object.getOwnPropertyNames(pitData);\n    for (let i = 0; i < attribs.length; i++) {\n      const attrib = attribs[i];\n      if(i < 6){\n        this.player1pits.push({\"index\":attrib, \"value\":pitData[attrib]})\n      } else if(i == 6){\n        this.player1Home = {\n          'index':Number(attrib), \n          'value':pitData[attrib]\n        }\n      } else if(i > 6 && i < 13){\n        this.player2pits.push({\"index\":attrib, \"value\":pitData[attrib]})\n      } else {\n        this.player2Home = {\n          'index':Number(attrib), \n          'value':pitData[attrib]\n        }\n      }\n    }\n  }\n\n  getStonesOfPit(pit: {\"index\": Number, \"value\": string}){\n    return Array(pit.value);\n  }\n\n  selectedPit(pit: {\"index\": Number, \"value\": string}){\n    // Fire event for number\n  }\n\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<!-- Toolbar -->\n<h1>Swagger</h1>\n<div *ngIf=\"!gameStarted\" class=\"start-game-box\">\n  <h2>Click on Start Game to start a new game !</h2>\n  <input type=\"button\" class=\"start-game-btn\" (click)=\"gameStarted = !gameStarted\" value=\"Start Game\"/>\n</div>\n<div *ngIf=\"gameStarted\">\n  <div class=\"player-info\">\n    <table class=\"info-table\">\n      <tbody>\n        <tr>\n          <td>\n            Player 1\n          </td>\n          <td>\n            <div class=\"player-icon player-1\"></div>\n          </td>\n          <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n          <td>Game ID :</td>\n          <td>\n            <label>{{gameData.id}}</label>\n        </tr>\n        <tr>\n          <td>\n            Player 2\n          </td>\n          <td>\n            <div class=\"player-icon player-2\"></div>\n          </td>\n          <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n          <td>\n            Current Player :\n          </td>\n          <td>\n            <label>{{currentPlayer}}</label>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <!-- <div><div class=\"player-icon player-1\"></div>Player 1 | \n    Player 2</div> -->\n  </div>\n  <div class=\"maze-block\" >\n    <div class=\"home-cell player-1 selectable-cell\">\n      <div class=\"seed-container\">\n        <div  class=\"seed\" *ngFor=\"let item of getStonesOfPit(player1Home); let i = index;\"></div>\n      </div>\n    </div>\n    <div class=\"blocks\">\n      <div class=\"row-1\">\n        <div *ngFor=\"let pit of player1pits\" class=\"stone-cell player-1 selectable-cell\">\n          <div class=\"seed-container\">\n            <div  class=\"seed\" *ngFor=\"let item of getStonesOfPit(pit); let i = index;\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row-2\">\n        <div *ngFor=\"let pit of player2pits\" onclick=\"selectedPit(pit)\" class=\"stone-cell player-2 selectable-cell\">\n          <div class=\"seed-container\">\n            <div  class=\"seed\" *ngFor=\"let item of getStonesOfPit(pit); let i = index;\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"home-cell player-2 selectable-cell\">\n      <div class=\"seed-container\">\n        <div  class=\"seed\" *ngFor=\"let item of getStonesOfPit(player2Home); let i = index;\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PitBlockComponent } from './pit-block/pit-block.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PitBlockComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pit-block',\n  templateUrl: './pit-block.component.html',\n  styleUrls: ['./pit-block.component.scss']\n})\nexport class PitBlockComponent implements OnInit {\n  stones = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.stones = Math.floor(Math.random() * Math.floor(15));\n  }\n\n\n  totalStones(): any[]{\n    return Array(this.stones)\n  }\n\n}\n","<div class=\"stone-cell\">\n    <div *ngIf=\"!stones\">&nbsp;</div>\n    <div class=\"seed\" *ngFor=\"let item of totalStones(); let i = index;\"></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}